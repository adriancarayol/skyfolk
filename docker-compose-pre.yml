version: '2'

services:    
  mail:
    image: tvial/docker-mailserver:latest
    hostname: mail
    domainname: skyfolk.net
    container_name: mail
    restart: always
    networks:
      - webnet
    ports:
      - "25:25"
      - "143:143"
      - "587:587"
      - "993:993"
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - ./config/config/:/tmp/docker-mailserver/
    environment:
      - SMTP_ONLY=0
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=1
      - ONE_DIR=1
      - DMS_DEBUG=0
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE

  # nginx
  nginx:
    image: nginx:latest
    container_name: ng01
    restart: always
    ports:
        - "8000:8000"
    volumes:
        - .:/code  # mount current directory inside container
        - ./config:/etc/nginx/conf.d
        - ./skyfolk/static:/static
        - /tmp:/tmp
    depends_on:
        - web
        - webworker
    networks:
        - webnet
    extra_hosts:
        - "cluster:172.17.0.1"

  # Redis
  redis:
    image: redis:4.0
    hostname: redis
    restart: always
    networks:
      - webnet
    
  # elasticsearch
  elasticsearch:
    image: elasticsearch:2.4.6
    container_name: elasticsearch1
    ports:
      - "9200:9200"
    volumes:
      - ./esdata/:/usr/share/elasticsearch/data/
    restart: always
    networks:
      - webnet

  kibana:
    image: kibana:4.6.0
    ports:
      - "5601:5601"
    restart: always
    volumes:
      - ./kibana/config/:/usr/share/kibana/config
    depends_on:
      - elasticsearch
    networks:
      - webnet

  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:latest
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_ERLANG_COOKIE='secret_cookie' 
    ports:
      - "5672:5672"  # we forward this port because it's useful for debugging
      - "15672:15672"  # here, we can access rabbitmq management plugin
    restart: always
    networks:
      - webnet
  
  webworker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
      - /tmp:/tmp
    command: ./run_worker.sh
    env_file:
      - web-pre-variables.env
    networks:
      - webnet
    depends_on:
      - rabbit
    restart: always
    extra_hosts:
        - "cluster:172.17.0.1"
  # Django web server
  web:
    env_file:
      - web-pre-variables.env
    build:
      context: .
      dockerfile: Dockerfile
    hostname: web
    command: ./run_web.sh
    volumes:
      - .:/code  # mount current directory inside container
      - /tmp:/tmp
      - ./skyfolk/static:/static
    expose:
        - "8000"
    networks:
      - webnet
    depends_on:
      - rabbit
    networks:
      - webnet
    restart: always
    extra_hosts:
        - "cluster:172.17.0.1"
  # Celery worker
  celery_worker:
    env_file:
      - web-pre-variables.env
    build:
      context: .
      dockerfile: Dockerfile
    command: ./run_celery.sh
    volumes:
      - .:/code
      - /tmp:/tmp
    networks:
      - webnet
    depends_on:
      - web
    restart: always
    extra_hosts:
        - "cluster:172.17.0.1"
  celery_beat:
    env_file:
      - web-pre-variables.env
    build:
      context: .
      dockerfile: Dockerfile
    command: ./run_beat.sh
    volumes:
      - .:/code
      - /tmp:/tmp
    networks:
      - webnet
    depends_on:
      - web
    restart: always
    extra_hosts:
        - "cluster:172.17.0.1"


volumes:
  maildata:
    driver: local
  mailstate:
    driver: local

networks:
  webnet:
    driver: bridge 
