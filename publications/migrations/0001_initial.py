# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-13 19:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('photologue', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('user_groups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='publicationimages', verbose_name='Image')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('board_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_owner', to=settings.AUTH_USER_MODEL)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply', to='publications.Publication')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user_give_me_hate', models.ManyToManyField(blank=True, related_name='hates_me', to=settings.AUTH_USER_MODEL)),
                ('user_give_me_like', models.ManyToManyField(blank=True, related_name='likes_me', to=settings.AUTH_USER_MODEL)),
                ('user_share_me', models.ManyToManyField(blank=True, related_name='share_me', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationDeleted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='publication_deleted_image')),
                ('created', models.DateTimeField(null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublicationGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='publicationimages', verbose_name='Image')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('board_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_group', to='user_groups.UserGroups')),
                ('g_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply_group', to='publications.PublicationGroup')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user_give_me_hate', models.ManyToManyField(blank=True, related_name='hates_group_me', to=settings.AUTH_USER_MODEL)),
                ('user_give_me_like', models.ManyToManyField(blank=True, related_name='likes_group_me', to=settings.AUTH_USER_MODEL)),
                ('user_share_me', models.ManyToManyField(blank=True, related_name='share_group_me', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PublicationPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='publicationimages', verbose_name='Image')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('board_photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='board_photo', to='photologue.Photo')),
                ('p_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reply_photo', to='publications.PublicationPhoto')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user_give_me_hate', models.ManyToManyField(blank=True, related_name='hate_photo_me', to=settings.AUTH_USER_MODEL)),
                ('user_give_me_like', models.ManyToManyField(blank=True, related_name='likes_photo_me', to=settings.AUTH_USER_MODEL)),
                ('user_share_me', models.ManyToManyField(blank=True, related_name='share_photo_me', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
