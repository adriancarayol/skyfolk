http {
    server {
        listen   80;
        server_name skyfolk.net;

        client_max_body_size 4G;

        access_log /var/www/skyfolk.net/log/nginx-access.log;
        error_log /var/www/skyfolk.net/log/log/nginx-error-skyfolk.log;

        location /static {
            alias /var/www/skyfolk.net/run/static/static/;
        }

        location /media {
            alias   /var/www/skyfolk.net/run/static/media/;
        }

        # alias robots.txt/humans.txt hacia a el directorio static
        location /robots.txt {
            alias /var/www/skyfolk.net/run/static/static/robots.txt;
        }
        location /humans.txt {
            alias /var/www/skyfolk.net/run/static/static/humans.txt;
        }

        location / {
            # an HTTP header important enough to have its own Wikipedia entry:
            #   http://en.wikipedia.org/wiki/X-Forwarded-For
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # enable this if and only if you use HTTPS, this helps Rack
            # set the proper protocol for doing redirects:
            # proxy_set_header X-Forwarded-Proto https;

            # pass the Host: header from the client right along so redirects
            # can be set properly within the Rack application
            proxy_set_header Host $http_host;

            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;

            # set "proxy_buffering off" *only* for Rainbows! when doing
            # Comet/long-poll stuff.  It's also safe to set if you're
            # using only serving fast clients with Unicorn + nginx.
            # Otherwise you _want_ nginx to buffer responses to slow
            # clients, really.
            # proxy_buffering off;

            # Try to serve static files from nginx, no point in making an
            # *application* server like Unicorn/Rainbows! serve static files.
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            if (!-f $request_filename) {
                #    proxy_pass http://127.0.0.1:8090; #skyfolk-pre_app_server;
                proxy_pass http://web:8090; #skyfolk-pre_app_server;
                break;
            }

            ## Basic Auth
            #auth_basic "Restricted";
            #auth_basic_user_file /var/www/skyfolk/config/nginx/.htpasswd;

        }

        # Error pages
        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /var/www/skyfolk.net/run/static/static/error;
        }
    }
}